---
version: "3.8"

x-client-base: &client-base
  image:  confluentinc/cp-enterprise-kafka:${TAG}
  command: 
  restart: always
  ports:
    - 1234
  volumes:
    - ${PWD}/jmx-exporter/jmx_prometheus_javaagent-0.18.0.jar:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.18.0.jar
    - ${PWD}/jmx-exporter/kafka-client.yml:/usr/share/jmx-exporter/kafka-client.yml
    - ./:/tmp/java/
    - ${PWD}/client-configs:/etc/client-configs
  environment:
    KAFKA_OPTS: "-javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.18.0.jar=1234:/usr/share/jmx-exporter/kafka-client.yml -Xmx256M -Xms256M" 

x-broker-common-settings: &broker-common-settings
  # listeners
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:SASL_PLAINTEXT,CONTROLLER:SASL_PLAINTEXT,BROKER:SASL_PLAINTEXT,HOST:SASL_PLAINTEXT,BROKER_PLAINTEXT:PLAINTEXT
  KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
  # listener host
  KAFKA_LISTENER_NAME_HOST_SASL_ENABLED_MECHANISMS: PLAIN
  KAFKA_LISTENER_NAME_HOST_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
    user_hostclient="hostclient-secret";
  # metrics security
  CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: PLAIN
  CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SASL_PLAINTEXT
  CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
    username="controlcenter" \
    password="controlcenter-secret";
  # security listener docker
  KAFKA_LISTENER_NAME_DOCKER_SASL_ENABLED_MECHANISMS: PLAIN
  KAFKA_LISTENER_NAME_DOCKER_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
    user_schemaregistry="schemaregistry-secret" \
    user_lagexporter="lagexporter-secret" \
    user_controlcenter="controlcenter-secret" \
    user_producer1="producer1-secret" \
    user_producer2="producer2-secret" \
    user_consumer1="consumer1-secret" \
    user_consumer2="consumer2-secret" ;
  # security listener interbroker
  KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
  KAFKA_LISTENER_NAME_BROKER_SASL_ENABLED_MECHANISMS: PLAIN
  KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
   # security listener controller
  KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
  # metrics
  KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
  CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
  CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
  CONFLUENT_METRICS_ENABLE: 'true'
  # interesting features
  KAFKA_DELETE_TOPIC_ENABLE: 'true'
  KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
  KAFKA_OPTS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.18.0.jar=1234:/usr/share/jmx-exporter/kafka-broker.yml -Xmx256M -Xms256M
  #kraft
  KAFKA_PROCESS_ROLES: 'broker,controller'
  KAFKA_CONTROLLER_QUORUM_VOTERS: '101@kafka-1:9095,102@kafka-2:9095,103@kafka-3:9095'

services:
  kafka-1:
    image:  confluentinc/cp-server:${TAG}
    hostname: kafka-1
    container_name: kafka-1
    ports:
      - "19092:19092"
      - "10091:10091"
    networks:
      - confluent
    volumes:
      - data-kafka-1:/var/lib/kafka/data
      - ${PWD}/jmx-exporter/jmx_prometheus_javaagent-0.18.0.jar:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.18.0.jar
      - ${PWD}/jmx-exporter/kafka-broker.yml:/usr/share/jmx-exporter/kafka-broker.yml
    environment:
      <<: *broker-common-settings
      CLUSTER_ID: 4L6g3nShT-eMCtK--X86sw
      KAFKA_NODE_ID: 101
      KAFKA_MIN_INSYNC_REPLICAS: 2
      # listeners
      KAFKA_LISTENERS: DOCKER://:9092,BROKER://:9093,HOST://:19092,BROKER_PLAINTEXT://:9094,CONTROLLER://:9095
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka-1:9092,BROKER://kafka-1:9093,HOST://localhost:19092,BROKER_PLAINTEXT://kafka-1:9094
      # jmx
      KAFKA_JMX_HOSTNAME: kafka-1
      KAFKA_JMX_PORT: 10091
      KAFKA_LISTENER_NAME_BROKER_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="broker1" \
        password="broker1-secret" \
        user_broker1="broker1-secret" \
        user_broker2="broker2-secret" \
        user_broker3="broker3-secret";
      KAFKA_LISTENER_NAME_CONTROLLER_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="broker1" \
        password="broker1-secret" \
        user_broker1="broker1-secret" \
        user_broker2="broker2-secret" \
        user_broker3="broker3-secret";  

  kafka-2:
    image:  confluentinc/cp-server:${TAG}
    hostname: kafka-2
    container_name: kafka-2
    ports:
      - "29092:29092"
      - "20091:20091"
    networks:
      - confluent
    volumes:
      - data-kafka-2:/var/lib/kafka/data
      - ${PWD}/jmx-exporter/jmx_prometheus_javaagent-0.18.0.jar:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.18.0.jar
      - ${PWD}/jmx-exporter/kafka-broker.yml:/usr/share/jmx-exporter/kafka-broker.yml
    environment:
      <<: *broker-common-settings
      CLUSTER_ID: 4L6g3nShT-eMCtK--X86sw
      KAFKA_NODE_ID: 102
      KAFKA_MIN_INSYNC_REPLICAS: 2
      # listeners
      KAFKA_LISTENERS: DOCKER://:9092,BROKER://:9093,HOST://:29092,BROKER_PLAINTEXT://:9094,CONTROLLER://:9095
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka-2:9092,BROKER://kafka-2:9093,HOST://localhost:29092,BROKER_PLAINTEXT://kafka-2:9094
      # jmx
      KAFKA_JMX_HOSTNAME: kafka-2
      KAFKA_JMX_PORT: 20091
      KAFKA_LISTENER_NAME_BROKER_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="broker2" \
        password="broker2-secret" \
        user_broker1="broker1-secret" \
        user_broker2="broker2-secret" \
        user_broker3="broker3-secret";
      KAFKA_LISTENER_NAME_CONTROLLER_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="broker1" \
        password="broker1-secret" \
        user_broker1="broker1-secret" \
        user_broker2="broker2-secret" \
        user_broker3="broker3-secret";   

  kafka-3:
    image:  confluentinc/cp-server:${TAG}
    hostname: kafka-3
    container_name: kafka-3
    ports:
      - "39092:39092"
      - "30091:30091"
    networks:
      - confluent
    volumes:
      - data-kafka-3:/var/lib/kafka/data
      - ${PWD}/jmx-exporter/jmx_prometheus_javaagent-0.18.0.jar:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.18.0.jar
      - ${PWD}/jmx-exporter/kafka-broker.yml:/usr/share/jmx-exporter/kafka-broker.yml
    environment:
      <<: *broker-common-settings
      CLUSTER_ID: 4L6g3nShT-eMCtK--X86sw
      KAFKA_NODE_ID: 103
      KAFKA_MIN_INSYNC_REPLICAS: 2
      # listeners
      KAFKA_LISTENERS: DOCKER://:9092,BROKER://:9093,HOST://:39092,BROKER_PLAINTEXT://:9094,CONTROLLER://:9095
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka-3:9092,BROKER://kafka-3:9093,HOST://localhost:39092,BROKER_PLAINTEXT://kafka-3:9094
      # jmx
      KAFKA_JMX_HOSTNAME: kafka-3
      KAFKA_JMX_PORT: 30091
      KAFKA_LISTENER_NAME_BROKER_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="broker3" \
        password="broker3-secret" \
        user_broker1="broker1-secret" \
        user_broker2="broker2-secret" \
        user_broker3="broker3-secret";
      KAFKA_LISTENER_NAME_CONTROLLER_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="broker1" \
        password="broker1-secret" \
        user_broker1="broker1-secret" \
        user_broker2="broker2-secret" \
        user_broker3="broker3-secret";   

  control-center:
    image: confluentinc/cp-enterprise-control-center:${TAG}
    hostname: control-center
    container_name: control-center
    depends_on:
      - kafka-1
    ports:
      - "9021:9021"
    networks:
      - confluent
    environment:
      CONTROL_CENTER_REST_LISTENERS: http://0.0.0.0:9021
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 4
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      CONTROL_CENTER_UI_AUTOUPDATE_ENABLE: "false"
      CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 1
      CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 1
      # security
      CONTROL_CENTER_STREAMS_SASL_MECHANISM: PLAIN
      # Configure SASL_SSL if SSL encryption is enabled; otherwise configure SASL_PLAINTEXT
      CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONTROL_CENTER_STREAMS_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="controlcenter" \
        password="controlcenter-secret";

  prometheus:
    networks:
      - confluent
    image: prom/prometheus:v2.34.0
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/:/etc/prometheus/

  node-exporter:
    networks:
      - confluent
    image: prom/node-exporter:v0.18.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points"
      - "^(aufs|proc|nsfs|shm|cgroup|tmpfs|binfmt_misc|debugfs|devpts|fusectl|hugetlbfs|fuse.lxcfs|mqueue|pstore|securityfs|sysfs|autofs|devtmpfs|configfs)"

  kafka-lag-exporter:
    networks:
      - confluent
    image: seglo/kafka-lag-exporter:0.8.2
    hostname: kafka-lag-exporter
    restart: always
    ports:
      - 9999:9999
    volumes:
      - ./kafka-lag-exporter/:/opt/docker/conf/

  grafana:
    networks:
      - confluent
    image: grafana/grafana:8.4.4
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: password
      GF_USERS_ALLOW_SIGN_UP: false
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/

  producer:
    <<: *client-base
    container_name: producer
    command: tail -f /dev/null
    networks:
      - confluent

  producer-1:
    <<: *client-base
    container_name: producer-1
    command: tail -f /dev/null
    networks:
      - confluent    

  consumer:
    <<: *client-base
    container_name: consumer
    command: tail -f /dev/null
    networks:
      - confluent  

volumes:
  data-kafka-1:
  data-kafka-2:
  data-kafka-3:

networks:
  confluent:
